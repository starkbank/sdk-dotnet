using System;
using System.Linq;
using StarkBank.Utils;
using System.Collections.Generic;

namespace StarkBank
{
    /// <summary>
    /// InvoicePullRequest.Log object
    /// <br/>
    /// Every time an InvoicePullRequest entity is updated, a corresponding InvoicePullRequest.Log
    /// is generated for the entity. This log is never generated by the
    /// user, but it can be retrieved to check additional information on the InvoicePullRequest.
    /// <br/>
    /// Properties:
    ///     <item>ID [string]: unique id returned when InvoicePullRequest.Log is created. ex: "5656565656565656"
    ///     <item>Request [InvoicePullRequest]: InvoicePullRequest entity to which the log refers to.
    ///     <item>Errors [string]: list of errors linked to this InvoicePullRequest event
    ///     <item>Type [string]: type of the InvoicePullRequest event which triggered the log creation. ex: "pending" or "success"
    ///     <item>Created [DateTime]: creation datetime for the log. ex: DateTime(2020, 3, 10, 10, 30, 0, 0)
    /// </list>
    /// </summary>
    public partial class InvoicePullRequest
    {
        public class Log : Resource
        {
            public DateTime Created { get; }
            public string Type { get; }
            public List<string> Errors { get; }
            public InvoicePullRequest InvoicePullRequest { get; }

            /// <summary>
            /// InvoicePullRequest.Log object
            /// <br/>
            /// Every time an InvoicePullRequest entity is updated, a corresponding InvoicePullRequest.Log
            /// is generated for the entity. This log is never generated by the
            /// user, but it can be retrieved to check additional information on the InvoicePullRequest.
            /// <br/>
            /// Attributes (return-only):
            ///     <item>ID [string]: unique id returned when InvoicePullRequest.Log is created. ex: "5656565656565656"
            ///     <item>Request [InvoicePullRequest]: InvoicePullRequest entity to which the log refers to.
            ///     <item>Errors [string]: list of errors linked to this InvoicePullRequest event
            ///     <item>Type [string]: type of the InvoicePullRequest event which triggered the log creation. ex: "pending" or "success"
            ///     <item>Created [DateTime]: creation datetime for the log. ex: DateTime(2020, 3, 10, 10, 30, 0, 0)
            /// </list>
            /// </summary>
            public Log(string id, DateTime created, string type, List<string> errors, InvoicePullRequest request) : base(id)
            {
                Created = created;
                Type = type;
                Errors = errors;
                InvoicePullRequest = request;
            }

            /// <summary>
            /// Retrieve a specific Log
            /// <br/>
            /// Receive a single Log object previously created by the Stark Bank API by passing its id
            /// <br/>
            /// Parameters (required):
            /// <list>
            ///     <item>id [string]: object unique id. ex: "5656565656565656"</item>
            /// </list>
            /// <br/>
            /// Parameters (optional):
            /// <list>
            ///     <item>user [Organization/Project object]: Organization or Project object. Not necessary if StarkBank.Settings.User was set before function call</item>
            /// </list>
            /// <br/>
            /// Return:
            /// <list>
            ///     <item>Log object with updated attributes</item>
            /// </list>
            /// </summary>
            public static Log Get(string id, User user = null)
            {
                (string resourceName, StarkCore.Utils.Api.ResourceMaker resourceMaker) = Resource();
                return Rest.GetId(
                    resourceName: resourceName,
                    resourceMaker: resourceMaker,
                    id: id,
                    user: user
                ) as Log;
            }

            /// <summary>
            /// Retrieve Logs
            /// <br/>
            /// Receive an IEnumerable of Log objects previously created in the Stark Bank API
            /// <br/>
            /// Parameters (optional):
            /// <list>
            ///     <item>limit [integer, default null]: maximum number of objects to be retrieved. Unlimited if null. ex: 35</item>
            ///     <item>after [DateTime, default null]: date filter for objects created only after specified date. ex: DateTime(2020, 3, 10)</item>
            ///     <item>before [DateTime, default null]: date filter for objects created only before specified date. ex: DateTime(2020, 3, 10)</item>
            ///     <item>types [list of strings, default null]: filter for log event types. ex: "created", "paid", "canceled" or "overdue"</item>
            ///     <item>requestIds [list of strings, default null]: list of Request IDs ids to filter logs. ex: ["5656565656565656", "4545454545454545"]</item>
            ///     <item>user [Project object, default null]: Project object. Not necessary if StarkBank.User.Default was set before function call</item>
            /// </list>
            /// <br/>
            /// Return:
            /// <list>
            ///     <item>list of Log objects with updated attributes</item>
            /// </list>
            /// </summary>
            public static IEnumerable<Log> Query(int? limit = null, DateTime? after = null, DateTime? before = null,
                List<string> types = null, List<string> requestIds = null, User user = null)
            {
                (string resourceName, StarkCore.Utils.Api.ResourceMaker resourceMaker) = Resource();
                return Rest.GetList(
                    resourceName: resourceName,
                    resourceMaker: resourceMaker,
                    query: new Dictionary<string, object> {
                        { "limit", limit },
                        { "after", new StarkCore.Utils.StarkDate(after) },
                        { "before", new StarkCore.Utils.StarkDate(before) },
                        { "types", types },
                        { "requestIds", requestIds }
                    },
                    user: user
                ).Cast<Log>();
            }

            /// <summary>
            /// Retrieve paged Logs
            /// <br/>
            /// Receive a list of up to 100 Log objects previously created in the Stark Bank API and the cursor to the next page.
            /// Use this function instead of query if you want to manually page your requests.
            /// <br/>
            /// Parameters (optional):
            /// <list>
            ///     <item>cursor [string, default null]: cursor returned on the previous page function call</item>
            ///     <item>limit [integer, default null]: maximum number of objects to be retrieved. Unlimited if null. ex: 35</item>
            ///     <item>after [DateTime, default null]: date filter for objects created only after specified date. ex: DateTime(2020, 3, 10)</item>
            ///     <item>before [DateTime, default null]: date filter for objects created only before specified date. ex: DateTime(2020, 3, 10)</item>
            ///     <item>types [list of strings, default null]: filter for log event types. ex: "created", "paid", "canceled" or "overdue"</item>
            ///     <item>requestIds [list of strings, default null]: list of Request IDs to filter logs. ex: ["5656565656565656", "4545454545454545"]</item>
            ///     <item>user [Project object, default null]: Project object. Not necessary if StarkBank.User.Default was set before function call</item>
            /// </list>
            /// <br/>
            /// Return:
            /// <list>
            ///     <item>list of Log objects with updated attributes and cursor to retrieve the next page of Log objects</item>
            ///     <item>cursor to retrieve the next page of InvoicePullRequest.Log objects</item>
            /// </list>
            /// </summary>
            public static (List<Log> page, string pageCursor) Page(string cursor = null, int? limit = null, DateTime? after = null,
                DateTime? before = null, List<string> types = null, List<string> requestIds = null, User user = null)
            {
                (string resourceName, StarkCore.Utils.Api.ResourceMaker resourceMaker) = Resource();
                (List<StarkCore.Utils.SubResource> page, string pageCursor) = Rest.GetPage(
                    resourceName: resourceName,
                    resourceMaker: resourceMaker,
                    query: new Dictionary<string, object> {
                        { "cursor", cursor },
                        { "limit", limit },
                        { "after", new StarkCore.Utils.StarkDate(after) },
                        { "before", new StarkCore.Utils.StarkDate(before) },
                        { "types", types },
                        { "requestIds", requestIds }
                    },
                    user: user
                );
                List<Log> logs = new List<Log>();
                foreach (StarkCore.Utils.SubResource subResource in page)
                {
                    logs.Add(subResource as Log);
                }
                return (logs, pageCursor);
            }

            internal static (string resourceName, StarkCore.Utils.Api.ResourceMaker resourceMaker) Resource()
            {
                return (resourceName: "InvoicePullRequestLog", resourceMaker: ResourceMaker);
            }

            internal static Resource ResourceMaker(dynamic json)
            {
                List<string> errors = json.errors.ToObject<List<string>>();
                string id = json.id;
                string createdString = json.created;
                DateTime created = StarkCore.Utils.Checks.CheckDateTime(createdString);
                string type = json.type;
                InvoicePullRequest request = InvoicePullRequest.ResourceMaker(json.request);

                return new Log(id: id, created: created, type: type, errors: errors, request: request);
            }
        }
    }
}
